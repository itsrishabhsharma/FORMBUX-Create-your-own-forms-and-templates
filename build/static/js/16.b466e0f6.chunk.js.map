{"version":3,"sources":["views/forms/extracted/container.js"],"names":["FormHeader","props","className","name","Container","logKey","e","code","submitItem","state","loading","form","fields","activeItemIndex","submitted","document","getElementById","addEventListener","APICall","get","this","match","params","id","then","res","setState","data","status","result","message","error","catch","err","length","post","formId","_id","success","val","response","title","subTitle","spinning","tip","takeiput","mapItm","activeFieldView","activeKey","Component","withRouter"],"mappings":"uPASMA,EAAW,SAACC,GAAS,OAAO,yBAAKC,UAAU,WAAU,8BAAOD,EAAME,QAElEC,E,kDACF,WAAYH,GAAO,IAAD,8BACd,cAAMA,IAQTI,OAAO,SAACC,GACO,UAATA,EAAEC,MACD,EAAKC,cATT,EAAKC,MAAM,CACPC,SAAQ,EACRC,KAAK,CAACC,OAAO,IACbC,gBAAgB,EAChBC,WAAU,GANA,E,gEAcE,IAAD,OACHC,SAASC,eAAe,QAEpCD,SAASE,iBAAiB,YAAY,SAACX,GAAD,OAAK,EAAKD,OAAOC,MAIvDY,IAAQC,IAAI,cAAcC,KAAKnB,MAAMoB,MAAMC,OAAOC,IAAIC,MAAK,SAAAC,GACvD,EAAKC,SAAS,CAAChB,SAAQ,IACpBe,EAAIE,KAAKC,OACR,EAAKF,SAAS,CAACf,KAAKc,EAAIE,KAAKE,SAG7BC,IAAQC,MAAM,mBAEnBC,OAAM,SAAAC,GACL,EAAKP,SAAS,CAAChB,SAAQ,IACvBoB,IAAQC,MAAM,qB,mCAGT,IAAD,OACLX,KAAKX,MAAME,KAAKC,OAAOsB,OAAO,EAAEd,KAAKX,MAAMI,gBAC9CO,KAAKM,SAAS,CAACb,gBAAgBO,KAAKX,MAAMI,gBAAgB,KAEtDiB,IAAQpB,QAAQ,qBAAqB,IAErCQ,IAAQiB,KAAK,eAAe,CAACC,OAAOhB,KAAKX,MAAME,KAAK0B,IAAIzB,OAAOQ,KAAKX,MAAME,KAAKC,SAASY,MAAK,SAAAC,GACtFA,EAAIE,KAAKC,QACRE,IAAQQ,QAAQ,iBAAiB,IACjC,EAAKZ,SAAS,CAACZ,WAAU,KAIzBgB,IAAQC,MAAMN,EAAIE,KAAKG,QAAQ,OAEpCE,OAAM,SAAAC,GACLH,IAAQC,MAAM,sCAAsC,U,6BAOzDQ,GAAK,IAAD,EACoBnB,KAAKX,MAA3BI,EADE,EACFA,gBAAgBF,EADd,EACcA,KACrBA,EAAKC,OAAOC,GAAiBD,OAAO,GAAG4B,SAASD,EAChDnB,KAAKM,SAAS,CAACf,W,+BAET,IAAD,OAEL,OACI,qCAG2B,IAAvBS,KAAKX,MAAMK,UAAmB,kBAAC,IAAD,CAC9Bc,OAAO,UACPa,MAAM,2BACNC,SAAUtB,KAAKX,MAAME,KAAKR,OAExB,kBAAC,IAAD,CAAMwC,SAAUvB,KAAKX,MAAMC,QAASkC,IAAI,qBAE3C,kBAAC5C,EAAD,CAAYG,KAAMiB,KAAKX,MAAME,KAAKR,OACjCiB,KAAKX,MAAME,KAAKC,OAAOsB,OAAO,EAAE,kBAAC,IAAD,CAAaW,SAAU,SAACN,GAAO,EAAKO,OAAOP,IAAOQ,gBAAiB3B,KAAKX,MAAME,KAAKC,OAAOQ,KAAKX,MAAMI,iBAAkBmC,UAAW5B,KAAKX,MAAMI,kBAAoB,KAC/L,yBAAKX,UAAU,YACVkB,KAAKX,MAAMI,kBAAkBO,KAAKX,MAAME,KAAKC,OAAOsB,OAAO,EAAE,uDAAmC,gE,GA/E/Fe,aAyFTC,sBAAW9C","file":"static/js/16.b466e0f6.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport APICall from '../../../services/APICall'\nimport './style.css';\nimport { withRouter } from 'react-router';\nimport {Spin,message,Result} from 'antd';\nimport cookie from 'react-cookies';\nimport FormPreview from '../formPreview';\n\n\nconst FormHeader=(props)=>{return <div className=\"frmHead\"><span>{props.name}</span></div>}\n\nclass Container extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            loading:true,\n            form:{fields:[]},\n            activeItemIndex:0,\n            submitted:false\n        }\n    }\n     logKey=(e)=>{\n        if(e.code===\"Enter\"){\n            this.submitItem()\n        }\n      }\n    componentDidMount(){\n        const log = document.getElementById('root');\n\n        document.addEventListener('keypress', (e)=>this.logKey(e));\n\n\n\n        APICall.get('forms/live/'+this.props.match.params.id).then(res=>{\n            this.setState({loading:false});\n            if(res.data.status){\n                this.setState({form:res.data.result})\n            }\n            else{\n                message.error('Invalid form');\n            }\n        }).catch(err=>{\n            this.setState({loading:false});\n            message.error('Invalid form');\n        })\n    }\n    submitItem(){\n        if(this.state.form.fields.length-1>this.state.activeItemIndex)\n        this.setState({activeItemIndex:this.state.activeItemIndex+1})\n        else{\n            message.loading('submitting form...',0.2)\n\n            APICall.post('forms/submit',{formId:this.state.form._id,fields:this.state.form.fields}).then(res=>{\n                if(res.data.status){\n                    message.success('FORM SUBMITTED',0.7);\n                    this.setState({submitted:true})\n                    // this.props.history.push(\"/\");\n                }\n                else{\n                    message.error(res.data.message,0.7)\n                }\n            }).catch(err=>{\n                message.error(\"Error occured while submitting form\",0.7)\n            })\n        }\n    }\n\n    \n\n    mapItm(val){\n        let {activeItemIndex,form}=this.state;\n        form.fields[activeItemIndex].fields[0].response=val;\n        this.setState({form})\n    }\n    render() {\n       \n        return (\n            <>\n           \n            {\n                this.state.submitted===true?  <Result\n                status=\"success\"\n                title=\"Your Response Submitted!\"\n                subTitle={this.state.form.name}\n                \n              />: <Spin spinning={this.state.loading} tip=\"Loading Form ...\n              \">\n               <FormHeader name={this.state.form.name} />\n               {this.state.form.fields.length>0?<FormPreview takeiput={(val)=>{this.mapItm(val)}} activeFieldView={this.state.form.fields[this.state.activeItemIndex]} activeKey={this.state.activeItemIndex} />:null}\n                  <div className=\"keyGuide\">\n                      {this.state.activeItemIndex===this.state.form.fields.length-1?<span>Press Enter to submit</span>:<span>Press Enter to continue</span>}\n                  </div>\n               </Spin>\n            }\n            </>\n        )\n    }\n}\n\n\nexport default withRouter(Container)"],"sourceRoot":""}